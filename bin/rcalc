#!/usr/bin/env ruby
# 1.9 adds realpath to resolve symlinks; 1.8 doesn't
# have this method, so we add it so we get resolved symlinks
# and compatibility
unless File.respond_to? :realpath
  class File #:nodoc:
    def self.realpath path
      return realpath(File.readlink(path)) if symlink?(path)
      path
    end
  end
end
$: << File.expand_path(File.dirname(File.realpath(__FILE__)) + '/../lib')
require 'rubygems'
require 'gli'
require 'rcalc_version'

include GLI

program_desc 'A simple command line calculator'

version Rcalc::VERSION

# default vaule in case the operation goes wrong
result = 0

desc 'Sum two numbers'
arg_name 'The two numbers to be summed'
command :sum do |c|
  c.action do |global_options,options,args|
    raise ArgumentError,"Two numbers are needed" unless args.length == 2
    result = args.first.to_i + args.last.to_i
  end
end

desc 'Divide two numbers'
arg_name 'One number and the one to be divided by'
command :divide do |c|
  c.action do |global_options,options,args|
    raise ArgumentError,"Two numbers are needed" unless args.length == 2
    result = args.first.to_i / args.last.to_i
  end
end

desc 'Substract to numbers'
arg_name 'One number and the one to be substracted'
command :substract do |c|
  c.action do |global_options,options,args|
    raise ArgumentError,"Two numbers are needed" unless args.length == 2
    result = args.first.to_i - args.last.to_i
  end
end

desc 'Multiply two numbers'
arg_name 'Two numbers to be multiplied'
command :multiply do |c|
  c.action do |global_options,options,args|
    raise ArgumentError,"Two numbers are needed" unless args.length == 2
    result = args.first.to_i * args.last.to_i
  end
end


post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
  puts result
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit GLI.run(ARGV)
